ku ORMRow
{
    data biao news [primaryKey(iD)] (
    string iD "编号" [by.identity.ID, notNull, max: 32]
    , string parentID "父ID" [by.identity.Reference, ref: news.iD]
    , string categoryID "分类编号categoryID" [by.identity.Reference, ref: category.iD]
    , string title "标题" [by.identity.Name, notNull, max: 255]
    , string videoID "视频,多个用逗号隔开" [by.identity.Attribute, min: 32, max: 512]
    , string abstract "摘要" [by.identity.Attribute, max: 4000]
    , string htmlContent "网页内容，ntext不支持SQL查询" [by.identity.Attribute, max: 100000]
    , string userID "用户ID" [by.identity.Reference, ref: userCms.iD]
    , int pV "点击数" [by.identity.Attribute]
    , int comment "评论数" [by.identity.Attribute]
    , int like "点赞数" [by.identity.Attribute]
    , int sort "排序" [by.identity.Attribute]
    , datetime dt "入库时间" [by.identity.Attribute])
    {
        
    }

    config biao news.source "数据源配置表。必须配置 SQL 后才有效，例 select [config 配置名], a.* from this, 直接写 select a.* from this 则相关配置无效" (
    string name "名称"
    , string mode "模式"
    , string[] actions "动作"
    , string fieldAccess "字段访问"
    , string[] settings "设置")
    {
        { iD, user, { select, insert }, iD, { name: "iD", text: "编号" } }
        { parentID, user, { insert, delete, update, select }, parentID, { name: "parentID", text: "父ID" } }
        { categoryID, user, { insert, delete, update, select }, categoryID, { name: "categoryID", text: "分类编号categoryID" } }
        { title, user, { insert, delete, update, select }, title, { name: "title", text: "标题" } }
        { videoID, user, { insert, delete, update, select }, videoID, { name: "videoID", text: "视频,多个用逗号隔开" } }
        { abstract, user, { insert, delete, update, select }, abstract, { name: "abstract", text: "摘要" } }
        { htmlContent, user, { insert, delete, update, select }, htmlContent, { name: "htmlContent", text: "网页内容，ntext不支持SQL查询" } }
        { userID, user, { insert, delete, update, select }, userID, { name: "userID", text: "用户ID" } }
        { pV, user, { insert, delete, update, select }, pV, { name: "pV", text: "点击数" } }
        { comment, user, { insert, delete, update, select }, comment, { name: "comment", text: "评论数" } }
        { like, user, { insert, delete, update, select }, like, { name: "like", text: "点赞数" } }
        { sort, user, { insert, delete, update, select }, sort, { name: "sort", text: "排序" } }
        { dt "获取一个 DateTime对象, 该对象设置为此计算机上的当前日期和时间", server, { insert, delete, update, select }, dt, { name: "dt", text: "入库时间", value: datetime.getNow() } }
    }

    config biao news.flow "数据流配置表" (
    string name "名称"
    , string action "动作"
    , string[] sources "数据源(source.name)")
    {
        { insert, insert, { iD, parentID, categoryID, title, videoID, abstract, htmlContent, userID, pV, comment, like, sort, dt } }
        { update, update, { parentID, categoryID, title, videoID, abstract, htmlContent, userID, pV, comment, like, sort, dt } }
        { delete, delete, { iD } }
        { select, select, { iD, parentID, categoryID, title, videoID, abstract, htmlContent, userID, pV, comment, like, sort, dt } }
        { popup, select, { iD, title } }
    }

    config biao news.control "控件配置表" (
    string name "名称"
    , string[] types "控件类型"
    , string[] sources "数据源(source.name)")
    {
        { edit, { Grid, EditArea }, { parentID, categoryID, title, videoID, abstract, htmlContent, userID, pV, comment, like, sort, dt } }
        { popup, { Grid, QueryArea }, { iD, title } }
    }
}